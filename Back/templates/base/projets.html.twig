{% extends 'base.html.twig' %}
{% block title %}
    {{parent()}}
    Projet
{% endblock %}
{% block css %}
    <link type="text/css" rel="stylesheet" href={{asset("css/Projets.css")}}/>
{% endblock %}
{% block content %}
    <div
        id="app" style="display: flex;flex-direction: column;">

        <!-- CONTENU -->
        <div id="Zone">

            <div id="Hobbies_Switch">
                <a v-bind:class="{active : select=='All'}" href="#" v-on:click="setSelect('all')">
                    All
                </a>
                <a v-bind:class="{active : select=='web'}" href="#" v-on:click="setSelect('web')">
                    <i class="fal fa-desktop"></i>
                </a>
                <a v-bind:class="{active : select=='photo'}" href="#" v-on:click="setSelect('photo')">
                    <i class="fal fa-camera-alt"></i>
                </a>
                <a v-bind:class="{active : select=='video'}" href="#" v-on:click="setSelect('video')">
                    <i class="fal fa-video"></i>
                </a>
                <a v-bind:class="{active : select=='montage'}" href="#" v-on:click="setSelect('montage')">
                    <i class="fal fa-wrench"></i>
                </a>
            </div>
            {# <div id="Sort_Select">
                <p>-</p>
                <p v-bind:class="{Sort_Select : select=='All', Sort : select != 'All' }" v-on:click="setSelect('All')">Tout</p>
                <p>/</p>
                <p v-bind:class="{Sort_Select : select=='realisation', Sort : select != 'realisation' }" v-on:click="setSelect('realisation')">Réalisation</p>
                <p>/</p>
                <p v-bind:class="{Sort_Select : select=='ecriture', Sort : select != 'ecriture' }" v-on:click="setSelect('ecriture')">Ecriture</p>
                <p>/</p>
                <p v-bind:class="{Sort_Select : select=='personnel', Sort : select != 'personnel' }" v-on:click="setSelect('personnel')">Personnel</p>
                <p>/</p>
                <p v-bind:class="{Sort_Select : select=='professionnel', Sort : select != 'professionnel' }" v-on:click="setSelect('professionnel')">Professionnel</p>
                <p>-</p>
            </div>
            <select id="Sort_Select_Mobile">
                <option value="valeur1">Tout</option>
                <option value="valeur2">Réalisation</option>
                <option value="valeur3">Ecriture</option>
                <option value="valeur4">Personnel</option>
                <option value="valeur5">Professionnel</option>
            </select> #}

            <div id="Project_Content" v-if="onLoad == false">
                <div class="Project_Data" v-for="projet in projets">
                
                    <a class="Lien_Photo" :href="'/projet' + '/' + projet.id + '/' + projet.slug"><img :src="projet.image" class="Photo"></a>
                    <div class="Project_Info Web">
                        <div class="Project_Type">{projet.titre}</div>
                        <div class="Project_Date">-
                            <span class="Project_Date_Data">{ projet.date| moment}</span>
                            -</div>
                    </div>
                </div>


                <div class="Project_Data hidden"></div>

                <div class="Project_Data hidden"></div>
                <div id="Centre_chiffre">
                    <template>
                        <div v-if="page == 1">
                            <button class="pag_select" v-on:click="setPage(page)">{page}</button>
                            <button v-on:click="setPage(page + 1)">{page + 1}</button>
                            <button v-on:click="setPage(page + 2)">{page + 2}</button>
                            ...
                            <button v-on:click="setPage(nbrPage)">{nbrPage}</button>

                        </div>
                        <div v-else-if="page < 3">
                            <button v-on:click="setPage(page -1)">{page -1}</button>
                            <button class="pag_select" v-on:click="setPage(page)">{page}</button>
                            <button v-on:click="setPage(page + 1)">{page + 1}</button>
                            ...
                            <button v-on:click="setPage(nbrPage)">{nbrPage}</button>

                        </div>
                        <div v-else-if="page >= 3 && page < nbrPage - 1">
                            <button v-on:click="setPage(1)">1</button>
                            ...
                            <button v-on:click="setPage(page - 1)">{page - 1}</button>
                            <button class="pag_select" v-on:click="setPage(page)">{page}</button>
                            <button v-on:click="setPage(page + 1)">{page + 1}</button>
                            ...
                            <button v-on:click="setPage(nbrPage)">{nbrPage}</button>

                        </div>
                        <div v-else-if="page == (nbrPage - 1)">
                            <button v-on:click="setPage(1)">1</button>
                            ...
                            <button v-on:click="setPage(page - 1)">{page - 1}</button>
                            <button class="pag_select" v-on:click="setPage(page)">{page}</button>
                            <button v-on:click="setPage(page + 1)">{page + 1}</button>
                        </div>
                        <div v-else-if="page == nbrPage">
                            <button v-on:click="setPage(1)">1</button>
                            ...
                            <button v-on:click="setPage(page - 2)">{page - 2}</button>
                            <button v-on:click="setPage(page - 1)">{page - 1}</button>
                            <button class="pag_select" v-on:click="setPage(page)">{page}</button>
                        </div>
                    </template>
                </div>

            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    <script crossorigin="anonymous" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    {# <script src="https://cdn.jsdelivr.net/npm/vue"></script> #}
    <script src="{{asset('js/vue.js')}}"></script>
    <script src="{{asset('js/moment.js')}}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>

    <script>
        var app = new Vue({
            el: '#app',
            delimiters: [
                '{', '}'
            ],
            data: {
                projets: [],
                select: "All",
                page: 1,
                count: 0,
                searchText: "",
                nbrPage: 0,
                onLoad: false
            },
            mounted() {
                this.getArticle();
                this.getCount();
            },
            filters: {
                moment: function (date) {
                     var d = new Date((date["timestamp"] * 1000));
                    return moment(d).locale("fr").format('LL');
                }
            },
            methods: {
                moment: function () {
                    return moment();
                },
                setSelect(selection) {
                    this.page = 1;
                    this.select = selection;
                    this.getArticleSelection();
                },
                setPage(page) {
                    if (this.page != page) {
                        this.page = page;
                        if (this.select == 'All') {
                            this.getArticle();
                        } else {
                            this.getArticleSelection();
                        }
                    }
                },
                setLoad() {
                    if (this.onLoad == false) {
                        this.onLoad = true;
                    } else {
                        this.onLoad = false;
                    }

                },
                getArticle() {
                    this.onLoad = true;
                    axios({
                        method: 'POST',
                        url: '/get-projet',
                        data: {
                            page: this.page
                        }
                    }).then(response => {
                        var getUrl = window.location;
                        var baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
                        baseUrl = baseUrl.replace("annonce", "");

                        var json = JSON.parse(response.data);
                        var object = this;
                        this.projets = [];
                        $.each(json, function (key, value) {
                            object.projets.push({"titre": value.title, "slug": value.slug,"id": value.id,"texte": value.texte, "date": value.date, "path": value.path, "image": value.miniature.path});
                        });
                        this.onLoad = false;

                    })
                },
                search() {
                    axios({
                        method: 'POST',
                        url: '/search-projet',
                        data: {
                            searchText: this.searchText
                        }
                    }).then(response => {
                        var getUrl = window.location;
                        var baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
                        baseUrl = baseUrl.replace("annonce", "");
                        var json = JSON.parse(response.data);
                        var object = this;
                        this.projets = [];
                        $.each(json, function (key, value) {
                            object.projets.push({"titre": value.titre, "texte": value.texte, "date": value.date});
                        });
                    })
                },
                getArticleSelection() {
                    if(this.select == 'all')
                    {
                        return this.getArticle();
                        
                    }
                    axios({
                        method: 'POST',
                        url: '/get-projet-selection',
                        data: { // id :this.biens[0],
                            selection: this.select,
                            page: this.page
                        }
                    }).then(response => {
                        var getUrl = window.location;
                        var baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
                        baseUrl = baseUrl.replace("annonce", "");
                        var json = JSON.parse(response.data);
                        var object = this;
                        console.log(json);
                        this.projets = [];
                        $.each(json, function (key, value) {
                            object.projets.push({"titre": value.title, "slug": value.slug,"id": value.id,"texte": value.texte, "date": value.date, "path": value.path, "image": value.miniature.path});
                        });
                        this.getCount();
                    })
                },
                getCount() {
                    console.log("get Count");
                    axios({
                        method: 'POST',
                        url: '/count-projet',
                        data: { // id :this.biens[0],
                            selection: this.select
                        }
                    }).then(response => {
                        var getUrl = window.location;
                        var baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
                        baseUrl = baseUrl.replace("annonce", "");
                        var json = JSON.parse(response.data);
                        var object = this;
                        console.log(json);
                        this.count = json;
                        this.nbrPage = Math.ceil(this.count / 6)
                        // this.projets = [];
                        // $.each(json,function(key,value){
                        // object.projets.push({"titre" : value.titre,"texte" : value.texte,"date" : value.date });
                        // });
                    })
                }
            }
        })
    </script>
{% endblock %}
