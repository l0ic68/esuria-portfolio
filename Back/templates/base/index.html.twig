{% extends 'base.html.twig' %}
{% block title %}
    {{ parent() }}
    Présentation
{% endblock %}
{% block css %}
    <link type="text/css" rel="stylesheet" href={{asset("css//Index.css")}}/>
{% endblock %}
{% block content %}
    <div id="Zone">
        <div id="Hobbies_Switch">
            <a href="{{path('index_nouveaute')}}">Nouveauté</a>
            <a href="#">
                <i class="far fa-chevron-left"></i>
                <span class="Current">Présentation</span>
                <i class="far fa-chevron-right"></i>
            </a>
            <a href="{{path('index_biographie')}}">Biographie</a>
        </div>
        <div id="Zone_haut">
            <div id="Presentation">
                <h1>- Présentation -</h1>
                <p>{{bio.presentation}}</p>
            </div>
            <div id="Parcours">
                <div id="app">
                    <h1>- Parcours -</h1>
                    <div id="Timeline">
                        <div id="Info">
                            <template v-if="date_smallEvent == null">
                                <p class="Periode" id="Periode_2012_2015">{date_start}
                                    <template v-if="date_end != ''">-</template>
                                    {date_end}</p>
                            </template>
                            <template v-else>
                                <p class="Periode" id="Periode_2012_2015">{date_smallEvent|moment()}</p>
                            </template>
                            <p class="Titre_periode" id="Titre_lycee">{titre}</p>
                        </div>
                    </div>

                    <i class="far fa-chevron-double-left" id="chevron_past"></i>
                    <div id="Timeline_bar">
                        <template v-for="(events, tindex) in timeline">
                            <div class="circle" v-on:click="changeInfo(tindex , sindex, 'event')">
                                <div class="InsideCircle" v-bind:class="{active : events.isEventActif }"></div>
                            </div>
                            <template v-if="events.smallEvent.length != 0">
                                <template v-for="(smallEvent, sindex) in events.smallEvent">
                                    <div v-bind:class="{active : events.isActive }" class="Bar"></div>
                                    <div class="LittleCircle" v-on:click="changeInfo(tindex , sindex, 'smallEvent')">
                                        <div class="InsideLittleCircle" v-bind:class="{active : smallEvent.isActive }"></div>
                                    </div>
                                    <template v-if="events.smallEvent.length == sindex + 1  ">
                                        <div v-bind:class="{active : events.isActive }" class="Bar"></div>
                                    </template>
                                </template>
                            </template>
                            <template v-else>
                                <div v-bind:class="{active : events.isActive }" class="Bar"></div>
                            </template>
                        </template>

                        {# <div class="Bar"></div> #}
                    </div>
                    <i class="far fa-chevron-double-right" id="chevron_post"></i>

                    <div id="Description"></div>
                    <p class="Description_Data">{description}</p>

                </div>
            </div>


            <div id="Competences">
                <h1>- Compétences -</h1>
                <div id="Competences_data">
                    {% for skill in skills %}
                        <div class="Competences_line">
                            <i class="{{skill.icone}}"></i>
                            <p>{{skill.name}}</p>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    <script>
        var c = 1;
        document.getElementById('chevron_past').onclick = function () {
            c++;
            $('#Timeline_bar>div').css({
                left: 'calc(9% * ' + c + ')'
            });
        };

        document.getElementById('chevron_post').onclick = function () {
            c--;
            $('#Timeline_bar>div').css({
                left: 'calc(9% * ' + c + ')'
            });
        };

        document.getElementsByClassName('Circle').onclick = function () {
            alert('test');
        };
    </script>
    <script crossorigin="anonymous" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src={{asset("js/vue.js") }}></script>
    <script src="{{asset('js/moment.js')}}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
    <script>
        var app = new Vue({
            el: '#app',
            delimiters: [
                '{', '}'
            ],
            data: {
                timeline: [
                    []
                ],
                key: 0,
                description: "coucou",
                id: 5,
                date_start: "coucou",
                date_end: "coucou",
                date_smallEvent: null,
                titre: "coucou",
                sindex: 0,
                tindex: 0,
            },
            filters: {
                moment: function (date) {
                    var d = new Date((date["timestamp"] * 1000));
                    return moment(d).locale("fr").format('LL');
                }
            },
            methods: {
                moment: function () {
                    return moment();
                },
                sayHello() {
                    alert("hello");
                },
                setKey(key) {
                    this.key = key;
                },
                changeInfo(tindex, sindex, type) {
                    if (type == "event") {
                        this.timeline.forEach((value, index) => {
                            value.isActive = false;
                            value.isEventActif = false;
                            value.smallEvent.forEach((value, index) => {
                                value.isActive = false;
                            })
                        })
                        this.date_smallEvent = null;
                        this.description = this.timeline[tindex].description;
                        this.date_start = this.timeline[tindex].date;
                        this.id = this.timeline[tindex].id;
                        this.titre = this.timeline[tindex].titre;
                        this.timeline[tindex].isActive = true;
                        this.timeline[tindex].isEventActif = true;
                        if (this.timeline.length == (tindex + 1)) {
                            this.date_end = "";
                        } else {
                            this.date_end = this.timeline[tindex + 1].date;
                        }
                    } else {
                        this.timeline.forEach((value, index) => {
                            value.isActive = false;
                            value.isEventActif = false;
                            value.smallEvent.forEach((value, index) => {
                                value.isActive = false;
                            })
                        })
                        this.description = this.timeline[tindex].smallEvent[sindex].description;
                        this.date_smallEvent = this.timeline[tindex].smallEvent[sindex].date;
                        this.titre = this.timeline[tindex].smallEvent[sindex].titre;
                        this.timeline[tindex].smallEvent[sindex].isActive = true;
                        this.timeline[tindex].isActive = true;


                    }
                },
                getTimeline() {
                    axios({method: 'POST', url: '/get-timeline'}).then(response => {
                        var getUrl = window.location;
                        var json = JSON.parse(response.data);
                        var object = this;
                        this.timeline = [];
                        $.each(json, function (key, value) {
                            value.smallEvent.sort(function (a, b) {
                                // Turn your strings into dates, and then subtract them
                                // to get a value that is either negative, positive, or zero.
                                return a.date.timestamp - b.date.timestamp;
                            });
                            object.timeline.push({
                                "titre": value.titre,
                                "description": value.description,
                                "date": value.date,
                                "id": value.id,
                                "smallEvent": value.smallEvent,
                                "isActive": false,
                                "isEventActif": false
                            });
                        });
                        this.changeInfo(0, 0, "event");
                    })

                }
            },
            mounted: function () {
                this.getTimeline();
            }
        })
    </script>
{% endblock %}
