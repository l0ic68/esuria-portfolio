{% extends 'base.html.twig' %}
{% block title %}
    {{ parent() }}
    Présentation
{% endblock %}
{% block css %}
    <link type="text/css" rel="stylesheet" href={{asset("css//Index.css")}}/>
{% endblock %}
{% block content %}
    <div id="Zone">
        <div id="Hobbies_Switch">
            <a href="{{path('index_nouveaute')}}">Nouveauté</a>
            <a href="#">
                <i class="far fa-chevron-left"></i>
                <span class="Current">Présentation</span>
                <i class="far fa-chevron-right"></i>
            </a>
            <a href="{{path('index_biographie')}}">Biographie</a>
        </div>
        <div id="Zone_haut">
            <div id="Presentation">
                <h1>- Présentation -</h1>
                <p>{{bio.presentation}}</p>
            </div>
            <div id="Parcours">
                <div id="app">
                    <h1>- Parcours -</h1>
                    <div id="Timeline">
                        <div id="Info">
                            <p class="Periode" id="Periode_2012_2015">{date_start}
                                <template v-if="date_end != ''">-</template>
                                {date_end}</p>
                            <p class="Titre_periode" id="Titre_lycee">{titre}</p>
                        </div>
                    </div>

                    <i class="far fa-chevron-double-left" id="chevron_past"></i>
                    <div id="Timeline_bar">
                        <template v-for="(events, tindex) in timeline">
                            <template v-for="(smallEvent, sindex) in events">
                                <template
                                    v-if="smallEvent.event">
                                    {# <div v-bind:class="{active : smallEvent.event.isActive }" class="Bar"></div> #}
                                    <div class="circle" v-on:click="changeInfo(tindex , sindex)">
                                        <div class="InsideCircle"></div>
                                    </div>
                                </template>
                                <template v-if="smallEvent.smallEvent">
                                    <div v-bind:class="{active : smallEvent.smallEvent.isActive }" class="Bar"></div>
                                    <div class="LittleCircle" v-on:click="changeInfo(tindex , sindex)">
                                        <div class="InsideLittleCircle"></div>
                                    </div>
                                    <template v-if="events.length - 1  == sindex ">
                                        <div v-bind:class="{active : smallEvent.smallEvent.isActive }" class="Bar"></div>
                                    </template>
                                </template>
                            </template>
                        </template>

                        {# <div class="Bar"></div> #}
                    </div>
                    <i class="far fa-chevron-double-right" id="chevron_post"></i>

                    <div id="Description"></div>
                    <p class="Description_Data">{description}</p>

                </div>
            </div>


            <div id="Competences">
                <h1>- Compétences -</h1>
                <div id="Competences_data">
                    {% for skill in skills %}
                        <div class="Competences_line">
                            <i class="{{skill.icone}}"></i>
                            <p>{{skill.name}}</p>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block js %}
    <script>
        var c = 1;
        document.getElementById('chevron_past').onclick = function () {
            c++;
            $('#Timeline_bar>div').css({
                left: 'calc(9% * ' + c + ')'
            });
        };

        document.getElementById('chevron_post').onclick = function () {
            c--;
            $('#Timeline_bar>div').css({
                left: 'calc(9% * ' + c + ')'
            });
        };

        document.getElementsByClassName('Circle').onclick = function () {
            alert('test');
        };
    </script>
    <script crossorigin="anonymous" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src={{asset("js/vue.js") }}></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
    <script>
        var app = new Vue({
            el: '#app',
            delimiters: [
                '{', '}'
            ],
            data: {
                timeline: [
                    []
                ],
                key: 0,
                description: "coucou",
                id: 5,
                date_start: "coucou",
                date_end: "coucou",
                titre: "coucou"
            },
            methods: {
                sayHello() {
                    alert("hello");
                },
                setKey(key) {
                    this.key = key;
                },
                changeInfo(tindex, sindex) {
                    if (this.timeline[tindex][sindex].event != undefined) {
                        this.description = this.timeline[tindex][sindex].event.description;
                        this.date_start = this.timeline[tindex][sindex].event.date;
                        this.id = this.timeline[tindex][sindex].event.id;
                        this.titre = this.timeline[tindex][sindex].event.titre;
                        this.timeline[tindex][sindex].event.isActive = true;
                        console.log(this.timeline[tindex]);
                        this.timeline[tindex].forEach((value, index) => {
                            if (value.event == undefined) {
                                value.smallEvent.isActive = true;
                            }
                        });
                        if (this.timeline.length == (tindex + 1)) {
                            this.date_end = "";
                        } else 
                            this.date_end = this.timeline[tindex + 1][sindex].event.date;
                        


                    } else {

                        this.description = this.timeline[tindex][sindex].smallEvent.description;
                        this.titre = this.timeline[tindex][sindex].smallEvent.titre;
                        this.timeline[tindex][sindex].smallEvent.isActive = true;
                        this.date_start = this.timeline[tindex][sindex].event.date;


                    }

                    // this.description = this.timeline[tindex][sindex].description;
                },
                getTimeline() {
                    axios({method: 'POST', url: '/get-timeline'}).then(response => {
                        var getUrl = window.location;
                        var json = JSON.parse(response.data);
                        var object = this;
                        this.timeline = [[]];

                        $.each(json, function (key, value) {
                            value.smallEvent.sort(function (a, b) {
                                // Turn your strings into dates, and then subtract them
                                // to get a value that is either negative, positive, or zero.
                                return a.date.timestamp - b.date.timestamp;
                            });
                            // console.log(this.timeline[key] == undefined);
                            if (object.timeline[key] == undefined) {
                                object.timeline[key] = [];
                            }
                            object.timeline[key].push({
                                "event": {
                                    "titre": value.event.titre,
                                    "description": value.event.description,
                                    "date": value.event.date,
                                    "id": value.event.id,
                                    "isActive": false
                                }
                            });
                            value.smallEvent.forEach(function (value) {
                                object.timeline[key].push({
                                    "smallEvent": {
                                        "titre": value.titre,
                                        "description": value.description,
                                        "date": value.date,
                                        "id": value.id,
                                        "isActive": false
                                    }
                                });
                            })

                        });
                        this.changeInfo(0, 0);
                    })

                }
            },
            mounted: function () {
                this.getTimeline();
            }
        })
    </script>
{% endblock %}
